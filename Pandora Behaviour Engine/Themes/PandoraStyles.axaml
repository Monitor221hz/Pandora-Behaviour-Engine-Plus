<!--
  ~ SPDX-License-Identifier: GPL-3.0-or-later
  ~ Copyright (C) 2023-2025 Pandora Behaviour Engine Contributors
-->

<Styles xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:b="using:Pandora.Behaviors"
        xmlns:vm="using:Pandora.ViewModels"
        xmlns:ui="using:FluentAvalonia.UI.Controls">
  <Design.PreviewWith>
    <Border Padding="20">
      <!-- Add Controls for Previewer Here -->
    </Border>
  </Design.PreviewWith>

  <Styles.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <MergeResourceInclude Source="avares://Pandora Behaviour Engine+/Themes/DataGrid/DataGridStyles.axaml" />
      </ResourceDictionary.MergedDictionaries>
    </ResourceDictionary>

    <b:ModsDataGridDropHandler x:Key="ModsDataGridDropHandler" />
  </Styles.Resources>

  <Style Selector="DataGrid.DragAndDrop">
    <Setter Property="(Interaction.Behaviors)">
      <BehaviorCollectionTemplate>
        <BehaviorCollection>
          <ContextDropBehavior Handler="{StaticResource ModsDataGridDropHandler}" />
          <b:KeyboardModMoveBehavior DropHandler="{StaticResource ModsDataGridDropHandler}" />
        </BehaviorCollection>
      </BehaviorCollectionTemplate>
    </Setter>
  </Style>

  <Style Selector="DataGrid.DragAndDrop DataGridRow.DraggingUp">
    <Setter Property="AdornerLayer.Adorner">
      <Template>
        <Border BorderThickness="0 2 0 0" Height="20" BorderBrush="{DynamicResource SystemAccentColor}"/>
      </Template>
    </Setter>
  </Style>

  <Style Selector="DataGrid.DragAndDrop DataGridRow.DraggingDown">
    <Setter Property="AdornerLayer.Adorner">
      <Template>
        <Border BorderThickness="0 0 0 2" BorderBrush="{DynamicResource SystemAccentColor}"/>
      </Template>
    </Setter>
  </Style>
  <Style Selector="DataGrid.DragAndDrop DataGridRow">
    <Setter Property="(Interaction.Behaviors)">
      <BehaviorCollectionTemplate>
        <BehaviorCollection>
          <ContextDragBehavior HorizontalDragThreshold="3" VerticalDragThreshold="3" />
        </BehaviorCollection>
      </BehaviorCollectionTemplate>
    </Setter>
  </Style>

  <Style Selector="DataGrid.DragAndDrop DataGridRowHeader">
    <Setter Property="Content">
      <Template>
        <TextBlock Text="{Binding Priority}" x:DataType="vm:ModInfoViewModel" FontSize="12" Margin="6 0 0 0" />
      </Template>
    </Setter>
  </Style>

  <Style Selector="DataGrid.ItemsDragAndDrop" x:DataType="vm:EngineViewModel">
    <Setter Property="(Interaction.Behaviors)">
      <BehaviorCollectionTemplate>
        <BehaviorCollection>
          <DataTrigger Binding="{Binding DataGridOptions.IsCompactRowHeight}" ComparisonCondition="Equal" Value="True">
            <ChangePropertyAction TargetObject="ModInfoDataGrid" PropertyName="RowHeight" Value="20" />
          </DataTrigger>
          <DataTrigger Binding="{Binding DataGridOptions.IsCompactRowHeight}" ComparisonCondition="NotEqual" Value="True">
            <ChangePropertyAction TargetObject="ModInfoDataGrid" PropertyName="RowHeight" Value="26" />
          </DataTrigger>
          <ContextDropBehavior Handler="{StaticResource ModsDataGridDropHandler}" />
          <b:KeyboardModMoveBehavior DropHandler="{StaticResource ModsDataGridDropHandler}" />
        </BehaviorCollection>
      </BehaviorCollectionTemplate>
    </Setter>
  </Style>

  <Style Selector="DataGridCell">
    <Setter Property="FontSize" Value="13" />
  </Style>
  <Style Selector="DataGridColumnHeader">
    <Setter Property="FontSize" Value="13" />
    <Style Selector="^ /template/ ui|FontIcon">
      <Setter Property="Height" Value="16" />
      <Setter Property="RenderTransform">
        <ScaleTransform ScaleX="0.8" ScaleY="0.8" />
      </Setter>
    </Style>
    <Style Selector="^:nth-child(1)">
      <Setter Property="Padding" Value="0" />
      <Setter Property="Margin" Value="0" />
      <Setter Property="Template">
        <ControlTemplate>
          <Border Name="HeaderBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
            <Grid Name="PART_ColumnHeaderRoot" ColumnDefinitions="*,Auto">
              <Grid Margin="{TemplateBinding Margin}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentPresenter Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
              </Grid>
              <Rectangle Name="VerticalSeparator" Grid.Column="1" Width="1" VerticalAlignment="Stretch" Fill="{TemplateBinding SeparatorBrush}" IsVisible="False" />
              <Grid Name="FocusVisual" IsHitTestVisible="False" IsVisible="False">
                <Rectangle Name="FocusVisualPrimary" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent" IsHitTestVisible="False" Stroke="{DynamicResource DataGridCellFocusVisualPrimaryBrush}" StrokeThickness="2" />
                <Rectangle Name="FocusVisualSecondary" Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent" IsHitTestVisible="False" Stroke="{DynamicResource DataGridCellFocusVisualSecondaryBrush}" StrokeThickness="1" />
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter>
    </Style>
    <Style Selector="^:nth-child(1) /template/ Grid#IconsOptionSort">
      <Setter Property="IsVisible" Value="False" />
    </Style>
    <Style Selector="^:nth-last-child(1)">
      <Setter Property="CornerRadius" Value="0 4 0 0" />
    </Style>
  </Style>



  <!-- Add Styles Here -->

  <Style Selector="GridSplitter.innerStyle">
    <Setter Property="Template">
      <ControlTemplate>
        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Background="{TemplateBinding Background}">
          <Border x:Name="Grip" Width="24" Height="3" CornerRadius="4" Background="{DynamicResource SystemFillColorAttentionBrush}">
            <Interaction.Behaviors>
              <DataTriggerBehavior Binding="{TemplateBinding ResizeDirection}" ComparisonCondition="Equal" Value="Columns">
                <ChangePropertyAction TargetObject="{Binding #Grip}" PropertyName="Width" Value="3" />
                <ChangePropertyAction TargetObject="{Binding #Grip}" PropertyName="Height" Value="24" />
              </DataTriggerBehavior>
              <DataTriggerBehavior Binding="{TemplateBinding ResizeDirection}" ComparisonCondition="Equal" Value="Rows">
                <ChangePropertyAction TargetObject="{Binding #Grip}" PropertyName="Width" Value="24" />
                <ChangePropertyAction TargetObject="{Binding #Grip}" PropertyName="Height" Value="3" />
              </DataTriggerBehavior>
            </Interaction.Behaviors>
          </Border>
        </Border>
      </ControlTemplate>
    </Setter>
  </Style>


  <Style Selector="AutoCompleteBox.SampleApp /template/ TextBox#PART_TextBox">
    <Setter Property="InnerRightContent">
      <Template>
        <StackPanel Orientation="Horizontal">
          <Button Content="&#xE8BB;"
                     FontFamily="{StaticResource SymbolThemeFontFamily}"
                     Theme="{StaticResource TransparentButton}"
                     Command="{Binding $parent[TextBox].Clear}"
                     IsVisible="{Binding Text, RelativeSource={RelativeSource FindAncestor, AncestorType=TextBox}, Converter={x:Static StringConverters.IsNotNullOrEmpty}}"/>
          <Button Content="&#xE721;"
                     FontFamily="{StaticResource SymbolThemeFontFamily}"
                     Theme="{StaticResource TransparentButton}"
                     Command="{Binding $parent[TextBox].Clear}"
                     IsHitTestVisible="False"/>
        </StackPanel>
      </Template>
    </Setter>
  </Style>

</Styles>