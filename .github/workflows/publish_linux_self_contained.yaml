name: publish_linux_self_contained

on:
  workflow_run:
    workflows: [build_release]
    types:
      - completed

env:
  build-mode: Release # Release | Debug
  # Explicit cache location to cache only nuget dependencies for this project.
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        dotnet-version: ["8.0.x"]

    steps:
      # Ref: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net#building-and-testing-your-code
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          
      - name: Get Latest Tag
        id: latesttag
        uses: WyriHaximus/github-action-get-previous-tag@v1.4.0
        with:
          fallback: 0.0.0
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: .NET Cache
        # If there is a cache here, it is restored, otherwise it is cached at the end.
        uses: actions/cache@v4
        with:
          # - Specify the same as `NUGET_PACKAGES`
          path: |
            ${{ github.workspace }}/.nuget/packages
            ${{ github.workspace }}/Pandora Behaviour Engine/bin
            ${{ github.workspace }}/Pandora Behaviour Engine/obj
            ${{ github.workspace }}/Pandora API/HKX2-Enhanced-Library/HKX2/bin
            ${{ github.workspace }}/Pandora API/HKX2-Enhanced-Library/HKX2/obj
            ${{ github.workspace }}/XML.Cake.NET/XML Cake/bin
            ${{ github.workspace }}/XML.Cake.NET/XML Cake/obj
          key: nuget-${{ runner.os }}-${{ matrix.dotnet-version }}
          restore-keys: |
            nuget-${{ runner.os }}-

      - name: Build Linux-x64
        run: dotnet publish "./Pandora+.sln" --configuration ${{ env.build-mode }} -r linux-x64 --self-contained

      - name: Build Linux-Arm
        run: dotnet publish "./Pandora+.sln" --configuration ${{ env.build-mode }} -r linux-arm --self-contained

      - name: Build Linux-Arm64
        run: dotnet publish "./Pandora+.sln" --configuration ${{ env.build-mode }} -r linux-arm64 --self-contained

      - name: Build Linux-Musl64
        run: dotnet publish "./Pandora+.sln" --configuration ${{ env.build-mode }} -r linux-musl-x64 --self-contained
      
      - name: Upload Linux-x64 Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Pandora.Behaviour.Engine.Linux-x64
          path: |
            ./Pandora Behaviour Engine/bin/${{ env.build-mode }}/net8.0/linux-x64/publish
            
      - name: Upload Linux-Arm Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Pandora.Behaviour.Engine.Linux-Arm
          path: |
            ./Pandora Behaviour Engine/bin/${{ env.build-mode }}/net8.0/linux-arm/publish    
            
      - name: Upload Linux-Arm64 Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Pandora.Behaviour.Engine.Linux-Arm64
          path: |
            ./Pandora Behaviour Engine/bin/${{ env.build-mode }}/net8.0/linux-arm64/publish        
            
      - name: Upload Linux-Musl64 Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Pandora.Behaviour.Engine.Linux-Musl-x64
          path: |
            ./Pandora Behaviour Engine/bin/${{ env.build-mode }}/net8.0/linux-musl-x64/publish    
            
      - name: Download Linux-x64
        uses: actions/download-artifact@v4
        with:
         name: Pandora.Behaviour.Engine.Linux-x64
         path: ./Output.Linux-x64
         merge-multiple: true

      - name: Download Linux-Arm
        uses: actions/download-artifact@v4
        with:
         name: Pandora.Behaviour.Engine.Linux-Arm
         path: ./Output.Linux-Arm
         merge-multiple: true

      - name: Download Linux-Arm64
        uses: actions/download-artifact@v4
        with:
         name: Pandora.Behaviour.Engine.Linux-Arm64
         path: ./Output.Linux-Arm64
         merge-multiple: true
         
      - name: Download Linux-Musl64
        uses: actions/download-artifact@v4
        with:
         name: Pandora.Behaviour.Engine.Linux-Musl-x64
         path: ./Output.Linux-Musl-x64
         merge-multiple: true
         
      - name: Zip Artifacts For Deployment
        run: |
          Compress-Archive -Path ./Output.Linux-x64/* -Destination "./Output.Linux-x64/Pandora_Behaviour_Engine_${{ steps.latesttag.outputs.tag }}_linux-x64_net.zip"
          Compress-Archive -Path ./Output.Linux-Arm/* -Destination "./Output.Linux-Arm/Pandora_Behaviour_Engine_${{ steps.latesttag.outputs.tag }}_linux-arm_net.zip"
          Compress-Archive -Path ./Output.Linux-Arm64/* -Destination "./Output.Linux-Arm64/Pandora_Behaviour_Engine_${{ steps.latesttag.outputs.tag }}_linux-arm64_net.zip"
          Compress-Archive -Path ./Output.Linux-Musl-x64/* -Destination "./Output.Linux-Musl-x64/Pandora_Behaviour_Engine_${{ steps.latesttag.outputs.tag }}_linux-musl-x64_net.zip"
         
      - name: Upload Release
        env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
         gh release upload "${{ steps.latesttag.outputs.tag }}" "./Output.Linux-x64/Pandora_Behaviour_Engine_${{ steps.latesttag.outputs.tag }}_linux-x64_net.zip"
         gh release upload "${{ steps.latesttag.outputs.tag }}" "./Output.Linux-Arm/Pandora_Behaviour_Engine_${{ steps.latesttag.outputs.tag }}_linux-arm_net.zip"
         gh release upload "${{ steps.latesttag.outputs.tag }}" "./Output.Linux-Arm64/Pandora_Behaviour_Engine_${{ steps.latesttag.outputs.tag }}_linux-arm64_net.zip"
         gh release upload "${{ steps.latesttag.outputs.tag }}" "./Output.Linux-Musl-x64/Pandora_Behaviour_Engine_${{ steps.latesttag.outputs.tag }}_linux-musl-x64_net.zip"
    
